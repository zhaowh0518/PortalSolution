//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace UserModel
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class UserEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“UserEntities”部分中的连接字符串初始化新 UserEntities 对象。
        /// </summary>
        public UserEntities() : base("name=UserEntities", "UserEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 UserEntities 对象。
        /// </summary>
        public UserEntities(string connectionString) : base(connectionString, "UserEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 UserEntities 对象。
        /// </summary>
        public UserEntities(EntityConnection connection) : base(connection, "UserEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<PortalCategory> PortalCategory
        {
            get
            {
                if ((_PortalCategory == null))
                {
                    _PortalCategory = base.CreateObjectSet<PortalCategory>("PortalCategory");
                }
                return _PortalCategory;
            }
        }
        private ObjectSet<PortalCategory> _PortalCategory;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<UserAct> UserAct
        {
            get
            {
                if ((_UserAct == null))
                {
                    _UserAct = base.CreateObjectSet<UserAct>("UserAct");
                }
                return _UserAct;
            }
        }
        private ObjectSet<UserAct> _UserAct;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<UserComment> UserComment
        {
            get
            {
                if ((_UserComment == null))
                {
                    _UserComment = base.CreateObjectSet<UserComment>("UserComment");
                }
                return _UserComment;
            }
        }
        private ObjectSet<UserComment> _UserComment;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<UserFavorite> UserFavorite
        {
            get
            {
                if ((_UserFavorite == null))
                {
                    _UserFavorite = base.CreateObjectSet<UserFavorite>("UserFavorite");
                }
                return _UserFavorite;
            }
        }
        private ObjectSet<UserFavorite> _UserFavorite;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<UserFeel> UserFeel
        {
            get
            {
                if ((_UserFeel == null))
                {
                    _UserFeel = base.CreateObjectSet<UserFeel>("UserFeel");
                }
                return _UserFeel;
            }
        }
        private ObjectSet<UserFeel> _UserFeel;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<UserInfo> UserInfo
        {
            get
            {
                if ((_UserInfo == null))
                {
                    _UserInfo = base.CreateObjectSet<UserInfo>("UserInfo");
                }
                return _UserInfo;
            }
        }
        private ObjectSet<UserInfo> _UserInfo;

        #endregion

        #region AddTo 方法
    
        /// <summary>
        /// 用于向 PortalCategory EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToPortalCategory(PortalCategory portalCategory)
        {
            base.AddObject("PortalCategory", portalCategory);
        }
    
        /// <summary>
        /// 用于向 UserAct EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUserAct(UserAct userAct)
        {
            base.AddObject("UserAct", userAct);
        }
    
        /// <summary>
        /// 用于向 UserComment EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUserComment(UserComment userComment)
        {
            base.AddObject("UserComment", userComment);
        }
    
        /// <summary>
        /// 用于向 UserFavorite EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUserFavorite(UserFavorite userFavorite)
        {
            base.AddObject("UserFavorite", userFavorite);
        }
    
        /// <summary>
        /// 用于向 UserFeel EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUserFeel(UserFeel userFeel)
        {
            base.AddObject("UserFeel", userFeel);
        }
    
        /// <summary>
        /// 用于向 UserInfo EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUserInfo(UserInfo userInfo)
        {
            base.AddObject("UserInfo", userInfo);
        }

        #endregion

    }

    #endregion

    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UserModel", Name="PortalCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PortalCategory : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 PortalCategory 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        public static PortalCategory CreatePortalCategory(global::System.Int32 id)
        {
            PortalCategory portalCategory = new PortalCategory();
            portalCategory.ID = id;
            return portalCategory;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentID
        {
            get
            {
                return _ParentID;
            }
            set
            {
                OnParentIDChanging(value);
                ReportPropertyChanging("ParentID");
                _ParentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentID");
                OnParentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentID;
        partial void OnParentIDChanging(Nullable<global::System.Int32> value);
        partial void OnParentIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Seq
        {
            get
            {
                return _Seq;
            }
            set
            {
                OnSeqChanging(value);
                ReportPropertyChanging("Seq");
                _Seq = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Seq");
                OnSeqChanged();
            }
        }
        private Nullable<global::System.Int32> _Seq;
        partial void OnSeqChanging(Nullable<global::System.Int32> value);
        partial void OnSeqChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private Nullable<global::System.Boolean> _State;
        partial void OnStateChanging(Nullable<global::System.Boolean> value);
        partial void OnStateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreateDate;
        partial void OnCreateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateDateChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UserModel", Name="UserAct")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserAct : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 UserAct 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="userID">UserID 属性的初始值。</param>
        /// <param name="contentID">ContentID 属性的初始值。</param>
        /// <param name="contentType">ContentType 属性的初始值。</param>
        /// <param name="actType">ActType 属性的初始值。</param>
        /// <param name="actCount">ActCount 属性的初始值。</param>
        /// <param name="updateDate">UpdateDate 属性的初始值。</param>
        public static UserAct CreateUserAct(global::System.Int32 id, global::System.Int32 userID, global::System.Int32 contentID, global::System.Int32 contentType, global::System.Int32 actType, global::System.Int32 actCount, global::System.DateTime updateDate)
        {
            UserAct userAct = new UserAct();
            userAct.ID = id;
            userAct.UserID = userID;
            userAct.ContentID = contentID;
            userAct.ContentType = contentType;
            userAct.ActType = actType;
            userAct.ActCount = actCount;
            userAct.UpdateDate = updateDate;
            return userAct;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContentID
        {
            get
            {
                return _ContentID;
            }
            set
            {
                OnContentIDChanging(value);
                ReportPropertyChanging("ContentID");
                _ContentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContentID");
                OnContentIDChanged();
            }
        }
        private global::System.Int32 _ContentID;
        partial void OnContentIDChanging(global::System.Int32 value);
        partial void OnContentIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContentType
        {
            get
            {
                return _ContentType;
            }
            set
            {
                OnContentTypeChanging(value);
                ReportPropertyChanging("ContentType");
                _ContentType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContentType");
                OnContentTypeChanged();
            }
        }
        private global::System.Int32 _ContentType;
        partial void OnContentTypeChanging(global::System.Int32 value);
        partial void OnContentTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActType
        {
            get
            {
                return _ActType;
            }
            set
            {
                OnActTypeChanging(value);
                ReportPropertyChanging("ActType");
                _ActType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActType");
                OnActTypeChanged();
            }
        }
        private global::System.Int32 _ActType;
        partial void OnActTypeChanging(global::System.Int32 value);
        partial void OnActTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActCount
        {
            get
            {
                return _ActCount;
            }
            set
            {
                OnActCountChanging(value);
                ReportPropertyChanging("ActCount");
                _ActCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActCount");
                OnActCountChanged();
            }
        }
        private global::System.Int32 _ActCount;
        partial void OnActCountChanging(global::System.Int32 value);
        partial void OnActCountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private global::System.DateTime _UpdateDate;
        partial void OnUpdateDateChanging(global::System.DateTime value);
        partial void OnUpdateDateChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UserModel", Name="UserComment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserComment : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 UserComment 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="userID">UserID 属性的初始值。</param>
        /// <param name="contentID">ContentID 属性的初始值。</param>
        /// <param name="comment">Comment 属性的初始值。</param>
        /// <param name="createDate">CreateDate 属性的初始值。</param>
        /// <param name="state">State 属性的初始值。</param>
        public static UserComment CreateUserComment(global::System.Int32 id, global::System.Int32 userID, global::System.Int32 contentID, global::System.String comment, global::System.DateTime createDate, global::System.Boolean state)
        {
            UserComment userComment = new UserComment();
            userComment.ID = id;
            userComment.UserID = userID;
            userComment.ContentID = contentID;
            userComment.Comment = comment;
            userComment.CreateDate = createDate;
            userComment.State = state;
            return userComment;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContentID
        {
            get
            {
                return _ContentID;
            }
            set
            {
                OnContentIDChanging(value);
                ReportPropertyChanging("ContentID");
                _ContentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContentID");
                OnContentIDChanged();
            }
        }
        private global::System.Int32 _ContentID;
        partial void OnContentIDChanging(global::System.Int32 value);
        partial void OnContentIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ContentType
        {
            get
            {
                return _ContentType;
            }
            set
            {
                OnContentTypeChanging(value);
                ReportPropertyChanging("ContentType");
                _ContentType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContentType");
                OnContentTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _ContentType;
        partial void OnContentTypeChanging(Nullable<global::System.Int32> value);
        partial void OnContentTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.Boolean _State;
        partial void OnStateChanging(global::System.Boolean value);
        partial void OnStateChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UserModel", Name="UserFavorite")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserFavorite : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 UserFavorite 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="userID">UserID 属性的初始值。</param>
        /// <param name="contentID">ContentID 属性的初始值。</param>
        /// <param name="contentType">ContentType 属性的初始值。</param>
        /// <param name="createDate">CreateDate 属性的初始值。</param>
        /// <param name="state">State 属性的初始值。</param>
        public static UserFavorite CreateUserFavorite(global::System.Int32 id, global::System.Int32 userID, global::System.Int32 contentID, global::System.Int32 contentType, global::System.DateTime createDate, global::System.Boolean state)
        {
            UserFavorite userFavorite = new UserFavorite();
            userFavorite.ID = id;
            userFavorite.UserID = userID;
            userFavorite.ContentID = contentID;
            userFavorite.ContentType = contentType;
            userFavorite.CreateDate = createDate;
            userFavorite.State = state;
            return userFavorite;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContentID
        {
            get
            {
                return _ContentID;
            }
            set
            {
                OnContentIDChanging(value);
                ReportPropertyChanging("ContentID");
                _ContentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContentID");
                OnContentIDChanged();
            }
        }
        private global::System.Int32 _ContentID;
        partial void OnContentIDChanging(global::System.Int32 value);
        partial void OnContentIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContentType
        {
            get
            {
                return _ContentType;
            }
            set
            {
                OnContentTypeChanging(value);
                ReportPropertyChanging("ContentType");
                _ContentType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContentType");
                OnContentTypeChanged();
            }
        }
        private global::System.Int32 _ContentType;
        partial void OnContentTypeChanging(global::System.Int32 value);
        partial void OnContentTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContentName
        {
            get
            {
                return _ContentName;
            }
            set
            {
                OnContentNameChanging(value);
                ReportPropertyChanging("ContentName");
                _ContentName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContentName");
                OnContentNameChanged();
            }
        }
        private global::System.String _ContentName;
        partial void OnContentNameChanging(global::System.String value);
        partial void OnContentNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContentImageURL
        {
            get
            {
                return _ContentImageURL;
            }
            set
            {
                OnContentImageURLChanging(value);
                ReportPropertyChanging("ContentImageURL");
                _ContentImageURL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContentImageURL");
                OnContentImageURLChanged();
            }
        }
        private global::System.String _ContentImageURL;
        partial void OnContentImageURLChanging(global::System.String value);
        partial void OnContentImageURLChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContentSummary
        {
            get
            {
                return _ContentSummary;
            }
            set
            {
                OnContentSummaryChanging(value);
                ReportPropertyChanging("ContentSummary");
                _ContentSummary = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContentSummary");
                OnContentSummaryChanged();
            }
        }
        private global::System.String _ContentSummary;
        partial void OnContentSummaryChanging(global::System.String value);
        partial void OnContentSummaryChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.Boolean _State;
        partial void OnStateChanging(global::System.Boolean value);
        partial void OnStateChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UserModel", Name="UserFeel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserFeel : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 UserFeel 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="userID">UserID 属性的初始值。</param>
        /// <param name="contentID">ContentID 属性的初始值。</param>
        /// <param name="contentType">ContentType 属性的初始值。</param>
        /// <param name="feeling">Feeling 属性的初始值。</param>
        /// <param name="createDate">CreateDate 属性的初始值。</param>
        public static UserFeel CreateUserFeel(global::System.Int32 id, global::System.Int32 userID, global::System.Int32 contentID, global::System.Int32 contentType, global::System.Int32 feeling, global::System.DateTime createDate)
        {
            UserFeel userFeel = new UserFeel();
            userFeel.ID = id;
            userFeel.UserID = userID;
            userFeel.ContentID = contentID;
            userFeel.ContentType = contentType;
            userFeel.Feeling = feeling;
            userFeel.CreateDate = createDate;
            return userFeel;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContentID
        {
            get
            {
                return _ContentID;
            }
            set
            {
                OnContentIDChanging(value);
                ReportPropertyChanging("ContentID");
                _ContentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContentID");
                OnContentIDChanged();
            }
        }
        private global::System.Int32 _ContentID;
        partial void OnContentIDChanging(global::System.Int32 value);
        partial void OnContentIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContentType
        {
            get
            {
                return _ContentType;
            }
            set
            {
                OnContentTypeChanging(value);
                ReportPropertyChanging("ContentType");
                _ContentType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContentType");
                OnContentTypeChanged();
            }
        }
        private global::System.Int32 _ContentType;
        partial void OnContentTypeChanging(global::System.Int32 value);
        partial void OnContentTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Feeling
        {
            get
            {
                return _Feeling;
            }
            set
            {
                OnFeelingChanging(value);
                ReportPropertyChanging("Feeling");
                _Feeling = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Feeling");
                OnFeelingChanged();
            }
        }
        private global::System.Int32 _Feeling;
        partial void OnFeelingChanging(global::System.Int32 value);
        partial void OnFeelingChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UserModel", Name="UserInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserInfo : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 UserInfo 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="openID">OpenID 属性的初始值。</param>
        /// <param name="summary">Summary 属性的初始值。</param>
        /// <param name="createDate">CreateDate 属性的初始值。</param>
        /// <param name="state">State 属性的初始值。</param>
        public static UserInfo CreateUserInfo(global::System.Int32 id, global::System.String openID, global::System.String summary, global::System.DateTime createDate, global::System.Boolean state)
        {
            UserInfo userInfo = new UserInfo();
            userInfo.ID = id;
            userInfo.OpenID = openID;
            userInfo.Summary = summary;
            userInfo.CreateDate = createDate;
            userInfo.State = state;
            return userInfo;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Pwd
        {
            get
            {
                return _Pwd;
            }
            set
            {
                OnPwdChanging(value);
                ReportPropertyChanging("Pwd");
                _Pwd = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Pwd");
                OnPwdChanged();
            }
        }
        private global::System.String _Pwd;
        partial void OnPwdChanging(global::System.String value);
        partial void OnPwdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OpenID
        {
            get
            {
                return _OpenID;
            }
            set
            {
                OnOpenIDChanging(value);
                ReportPropertyChanging("OpenID");
                _OpenID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OpenID");
                OnOpenIDChanged();
            }
        }
        private global::System.String _OpenID;
        partial void OnOpenIDChanging(global::System.String value);
        partial void OnOpenIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NickName
        {
            get
            {
                return _NickName;
            }
            set
            {
                OnNickNameChanging(value);
                ReportPropertyChanging("NickName");
                _NickName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NickName");
                OnNickNameChanged();
            }
        }
        private global::System.String _NickName;
        partial void OnNickNameChanging(global::System.String value);
        partial void OnNickNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Summary
        {
            get
            {
                return _Summary;
            }
            set
            {
                OnSummaryChanging(value);
                ReportPropertyChanging("Summary");
                _Summary = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Summary");
                OnSummaryChanged();
            }
        }
        private global::System.String _Summary;
        partial void OnSummaryChanging(global::System.String value);
        partial void OnSummaryChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Sex
        {
            get
            {
                return _Sex;
            }
            set
            {
                OnSexChanging(value);
                ReportPropertyChanging("Sex");
                _Sex = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sex");
                OnSexChanged();
            }
        }
        private Nullable<global::System.Int32> _Sex;
        partial void OnSexChanging(Nullable<global::System.Int32> value);
        partial void OnSexChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String province
        {
            get
            {
                return _province;
            }
            set
            {
                OnprovinceChanging(value);
                ReportPropertyChanging("province");
                _province = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("province");
                OnprovinceChanged();
            }
        }
        private global::System.String _province;
        partial void OnprovinceChanging(global::System.String value);
        partial void OnprovinceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HeadImgUrl
        {
            get
            {
                return _HeadImgUrl;
            }
            set
            {
                OnHeadImgUrlChanging(value);
                ReportPropertyChanging("HeadImgUrl");
                _HeadImgUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HeadImgUrl");
                OnHeadImgUrlChanged();
            }
        }
        private global::System.String _HeadImgUrl;
        partial void OnHeadImgUrlChanging(global::System.String value);
        partial void OnHeadImgUrlChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SubscribeTime
        {
            get
            {
                return _SubscribeTime;
            }
            set
            {
                OnSubscribeTimeChanging(value);
                ReportPropertyChanging("SubscribeTime");
                _SubscribeTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubscribeTime");
                OnSubscribeTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _SubscribeTime;
        partial void OnSubscribeTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnSubscribeTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UnionID
        {
            get
            {
                return _UnionID;
            }
            set
            {
                OnUnionIDChanging(value);
                ReportPropertyChanging("UnionID");
                _UnionID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UnionID");
                OnUnionIDChanged();
            }
        }
        private global::System.String _UnionID;
        partial void OnUnionIDChanging(global::System.String value);
        partial void OnUnionIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.Boolean _State;
        partial void OnStateChanging(global::System.Boolean value);
        partial void OnStateChanged();

        #endregion

    
    }

    #endregion

    
}
